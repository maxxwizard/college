#------------------
# PERFORM StrCmp (test)
#------------------
	la $a0, word0
	la $a1, word1
	jal StrCmp
	move $a0, $v0
	li $v0, 1
	syscall

#------------------
# PERFORM Swap (test)
#------------------
	la $a0, array
	li $a1, 0
	li $a2, 1
	jal Swap
	li $a1, 2
	jal Swap

=============================================

	addi $sp, $sp, -24	# save $t0-t5
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)

	lw $t0, 0($sp)		# restore $t0-t5
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	addi $sp, $sp, 24

=============================================

		addi $sp, $sp, -12
		sw $a0, 0($sp)
		sw $a1, 4($sp)
		sw $a2, 8($sp)

		lw $a0, 0($sp)
		lw $a1, 4($sp)
		lw $a2, 8($sp)
		addi $sp, $sp, 12

=============================================

without for loop

mips spim Syscall xspim Quicksort recursion 
final array:
Syscall spim mips xspim Quicksort recursion 

======================================

#--test print m--
	addi $sp, $sp, -8
	sw $a0, 0($sp)
	sw $v0, 4($sp)
	move $a0, $v0		# print m
	li $v0, 1
	syscall
	la $a0, CLRF		# print new line
	li $v0, 4
	syscall
	lw $a0, 0($sp)
	lw $v0, 4($sp)
	addi $sp, $sp, 8
#----------------