{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Matthew Huynh\
U85462311\
Lab 03\
\
Exercise 1\
========\
a) 1. The game logic interface will provide the ability to report the current state of the game by passing back a data structure.\
2. The game logic interface will provide the ability to create a new instance of the game.\
3. The game logic interface will provide the ability to make a move that involves jumping multiple checkers.\
4. The game logic interface will provide the ability to manipulate a single piece, returning a boolean value of whether the move was successful or not.\
\
b) \
\
c) 1. "get: gamestate" => "red: f6(kinged); black: e5; black: e5;"\
2. "init red: f6(kinged); black: e5;" => "ok;"\
"init red: f9; black: f8;" => "err;"\
3. "move: f6>d4>f2" => "ok;"\
"move f6>d4>d4" => "err;"\
4. "move f6>d4" => "ok;"\
"move f6>d1" => "err;"}